- state = @node.state
- if false #@node.bmc_set?
  %ul.buttons
    %li= link_to "Reboot", "/ipmi/v2/nodes/#{@node.id}/reboot", :method=>:put, :class => 'button', :'data-remote' => true, :'data-confirm' => t('are_you_sure') 
    %li= link_to "Shutdown", "/ipmi/v2/nodes/#{@node.id}/shutdown", :method=>:put, :class => 'button', :'data-remote' => true, :'data-confirm' => t('are_you_sure')
    %li= link_to "Power On", "/ipmi/v2/nodes/#{@node.id}/poweron", :method=>:put, :class => 'button', :'data-remote' => true, :'data-confirm' => t('are_you_sure')
    %li= link_to "Identify", "/ipmi/v2/nodes/#{@node.id}/identify", :method=>:put, :class => 'button', :'data-remote' => true

.column_50.first
  %dl
    = dl_item(t('.name'), @node.name)
    = dl_item(t('.description'), @node.description || (t 'not_set'))
    %dt= t '.deployment'
    %dd
      = form_for @node, :remote => true, :url => node_path(:id=>@node.id, :version=>'v2'), :html => { :method=>:put, 'data-type' => 'json', 'data-remote' => true, :class => "formtastic", :onsubmit=>"location.reload();" } do |f|
        - deployments = Deployment.all
        = f.collection_select :deployment, deployments, :id, :name, :selected=>@node.deployment.id
        %input.button{:type => "submit", :name => "update", :value => t('update'), }
    %dt= t('.bootenv')
    %dd= t(".#{@node.bootenv}", :default=>@node.bootenv)
    %dt= t('.status')
    %dd
      = t (@node.alive ? ".alive" : ".dead")
      = t (@node.available ? ".available" : ".reserved")
      = NodeRole.state_name(state)
      = link_to t((@node.available ? '.reserve' : '.release')), node_path(@node.id, :version=>'v2', :available=>!@node.available), 
                    :method=>:put, :class=>'button', :remote=>true, :onclick=>"location.reload();"

.column_50.last
  %dl
    - switch = @node.attrib_switches.detect{ |k, v| v["link"] }.second  rescue nil # get the first active switch
    - if switch and switch.length > 0
      -if switch["unit"].eql? "-1"
        = dl_item(t('.switch_name_port'), "#{switch["name"]} / #{switch["port"]}")
      -else
        = dl_item(t('.switch_name_unit_port'), "#{switch["name"]} / #{switch["unit"]} / #{switch["port"]}")
    - else
      = dl_item(t('.switch_name'), t('.switch_no_link'))
    = dl_item(t('.hardware'), @node.attrib_hardware)
    = dl_item(t('.cpu'), @node.attrib_cpu)
    = dl_item(t('.memory'), format_memory(@node.attrib_memory))
    = dl_item(t('.number_of_drives'), "#{@node.attrib_number_of_drives || 0}, #{t('.raid')}: #{t('.'+(@node.attrib_raid_set || 'not_set'))}")
    = dl_item(t('.addresses'), @node.addresses.join(','))
    = dl_item(t('.asset_tag'), @node.attrib_asset_tag)
    - if Rails.env.development? and Jig.active('test')
      %dt= t '.bdd_marker'
      %dd= @node.attrib_bdd_marker || t('ignore')

.clear
